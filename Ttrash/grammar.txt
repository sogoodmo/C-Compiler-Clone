
program -> extern_list decl_list 
            | decl_list
extern_list -> extern extern_list_prime 


extern_list_prime -> extern extern_list_prime 
            | epsilon

extern -> "extern" type_spec IDENT "(" params ")" ";"

decl_list -> decl decl_list_prime 
decl_list_prime -> decl decl_list_prime | epsilon

decl -> var_type IDENT decl_prime | "void" IDENT "(" params ")" block

decl_prime -> ";" | "(" params ")" block

var_decl -> var_type IDENT ";" 

type_spec -> "void" | var_type       

var_type  -> "int" |  "float" |  "bool"

fun_decl -> type_spec IDENT "(" params ")" block

params -> param_list  
        |  "void" | epsilon

param_list -> param param_list_prime 
param_list_prime -> "," param param_list_prime | epsilon

param -> var_type IDENT

block -> "{" local_decls stmt_list "}"

local_decls -> local_decl local_decls | epsilon

local_decl -> var_type IDENT ";"

stmt_list -> stmt stmt_list | epsilon 
stmt -> expr_stmt 
            |  block 
            |  if_stmt 
            |  while_stmt 
            |  return_stmt

expr_stmt -> expr ";" | ";"
while_stmt -> "while" "(" expr ")" stmt 
if_stmt -> "if" "(" expr ")" block else_stmt
else_stmt  -> "else" block | epsilon

return_stmt -> "return" return_stmt_prime 
return_stmt_prime -> ";" | expr ";"   
                       
expr -> IDENT "=" expr 
        | rval

rval -> rval_or rval_prime 
rval_prime -> "||" rval_or rval_prime | epsilon

rval_or -> rval_and rval_or_prime 
rval_or_prime -> "&&" rval_and rval_or_prime | epsilon

rval_and -> rval_eq rval_and_prime 
rval_add_prime -> "==" rval_eq | "!=" rval_eq | epsilon

rval_eq -> rval_cmp rval_eq_prime 
rval_eq_prime -> "<=" rval_cmp | "<" rval_cmp | ">=" rval_cmp | ">" rval_cmp | epsilon

rval_cmp -> rval_add rval_cmp_prime 
rval_cmp_prime -> "+" rval_add  | "-" rval_add | epsilon

rval_add -> rval_mul rval_add_prime 
rval_add_prime -> "+" rval_mul  | "-" rval_mul | epsilon


rval_mul -> rval_neg rval_mul_prime 
rval_mul_prime -> "*" rval_neg  | "/" rval_neg  | "%" rval_neg | epsilon

rval_neg -> "-" rval_neg | "!" rval_neg | rval_par 
rval_par -> "(" expr ")" | rval_ident


rval_ident -> IDENT rval_ident_prime | rval_term 
rval_ident_prime -> epsilon | "(" args ")" 
rval_term -> INT_LIT | FLOAT_LIT | BOOL_LIT
args -> arg_list 
        |  epsilon
arg_list -> expr arg_list_prime 
arg_list_prime -> "," expr arg_list_prime | epsilon 
